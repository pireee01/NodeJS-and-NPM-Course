{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VITO\\\\Desktop\\\\_Code\\\\react-nationalize\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nfunction App() {\n  const [name, setName] = useState('');\n  const [countries, setCountries] = useState([]);\n  const getCountryName = async countryCode => {\n    const url = `https://restcountries.com/v3.1/alpha/${countryCode}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data[0].name.common; // Ambil nama umum dari negara\n  };\n  const handlePredictClick = async () => {\n    const response = await fetch(`https://api.nationalize.io/?name=${name}`);\n    const data = await response.json();\n    const countriesWithNames = await Promise.all(data.country.map(async country => ({\n      ...country,\n      name: await getCountryName(country.country_id)\n    })));\n    setCountries(countriesWithNames);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Predict Nationality\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    placeholder: \"Enter a name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePredictClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Predict\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, countries.map((country, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Negara \", index + 1, \": \", country.name, \" dengan probabilitas \", country.probability.toFixed(2)))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","App","name","setName","countries","setCountries","getCountryName","countryCode","url","response","fetch","data","json","common","handlePredictClick","countriesWithNames","Promise","all","country","map","country_id","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","index","key","probability","toFixed"],"sources":["C:/Users/VITO/Desktop/_Code/react-nationalize/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction App() {\r\n    const [name, setName] = useState('');\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    const getCountryName = async (countryCode) => {\r\n        const url = `https://restcountries.com/v3.1/alpha/${countryCode}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        return data[0].name.common; // Ambil nama umum dari negara\r\n    };\r\n\r\n    const handlePredictClick = async () => {\r\n        const response = await fetch(`https://api.nationalize.io/?name=${name}`);\r\n        const data = await response.json();\r\n        const countriesWithNames = await Promise.all(\r\n            data.country.map(async (country) => ({\r\n                ...country,\r\n                name: await getCountryName(country.country_id)\r\n            }))\r\n        );\r\n        setCountries(countriesWithNames);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Predict Nationality</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Enter a name\"\r\n            />\r\n            <button onClick={handlePredictClick}>Predict</button>\r\n            <ul>\r\n                {countries.map((country, index) => (\r\n                    <li key={index}>\r\n                        Negara {index + 1}: {country.name} dengan probabilitas {country.probability.toFixed(2)}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,GAAGA,CAAA,EAAG;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMM,cAAc,GAAG,MAAOC,WAAW,IAAK;IAC1C,MAAMC,GAAG,GAAG,wCAAwCD,WAAW,EAAE;IACjE,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAAC,CAAC,CAAC,CAACT,IAAI,CAACW,MAAM,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoCR,IAAI,EAAE,CAAC;IACxE,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,MAAMG,kBAAkB,GAAG,MAAMC,OAAO,CAACC,GAAG,CACxCN,IAAI,CAACO,OAAO,CAACC,GAAG,CAAC,MAAOD,OAAO,KAAM;MACjC,GAAGA,OAAO;MACVhB,IAAI,EAAE,MAAMI,cAAc,CAACY,OAAO,CAACE,UAAU;IACjD,CAAC,CAAC,CACN,CAAC;IACDf,YAAY,CAACU,kBAAkB,CAAC;EACpC,CAAC;EAED,oBACIhB,KAAA,CAAAsB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI5B,KAAA,CAAAsB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,qBAAuB,CAAC,eAC5B5B,KAAA,CAAAsB,aAAA;IACIO,IAAI,EAAC,MAAM;IACXC,KAAK,EAAE3B,IAAK;IACZ4B,QAAQ,EAAGC,CAAC,IAAK5B,OAAO,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IACzCI,WAAW,EAAC,cAAc;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC7B,CAAC,eACF5B,KAAA,CAAAsB,aAAA;IAAQa,OAAO,EAAEpB,kBAAmB;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAAe,CAAC,eACrD5B,KAAA,CAAAsB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACKvB,SAAS,CAACe,GAAG,CAAC,CAACD,OAAO,EAAEiB,KAAK,kBAC1BpC,KAAA,CAAAsB,aAAA;IAAIe,GAAG,EAAED,KAAM;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SACL,EAACQ,KAAK,GAAG,CAAC,EAAC,IAAE,EAACjB,OAAO,CAAChB,IAAI,EAAC,uBAAqB,EAACgB,OAAO,CAACmB,WAAW,CAACC,OAAO,CAAC,CAAC,CACrF,CACP,CACD,CACH,CAAC;AAEd;AAEA,eAAerC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}